services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "9000:9000" # Exposes the backend API
    volumes:
      - ./backend:/app # Syncs local backend directory with the container
    # environment:
    #   JWT_SECRET: ${JWT_SECRET}
    #   PORT: ${PORT}
    #   DB_HOST: ${DB_HOST}
    #   DB_PORT: ${DB_PORT}
    #   DB_USER: ${DB_USER}
    #   DB_PASSWORD: ${DB_PASSWORD}
    #   DB_NAME: ${DB_NAME}
    command: ["yarn", "dev"]
    depends_on:
      - db
    networks:
      - app-network # Ensure the backend is on the app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3030:3030" # Exposes the frontend
    volumes:
      - ./frontend:/app
    environment:
      - NODE_ENV=development
    networks:
      - app-network # Ensure the frontend is on the app-network
    depends_on:
      - backend
  db:
    image: postgres:15
    container_name: hamrocoders-sql-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER} # Set the database user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD} # Set the database password
      POSTGRES_DB: ${POSTGRES_DB} # Set the database name
    ports:
      - "5433:5432" # Exposes the database on port 5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network # Ensure the database is on the app-network
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL} # Set pgAdmin email (you can change this)
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD} # Set pgAdmin password (you can change this)
    ports:
      - "5050:80" # Access pgAdmin at localhost:5050
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - app-network

networks:
  app-network:
    driver: bridge # Uses the bridge driver to create the network

volumes:
  postgres_data:
  pgadmin_data:
